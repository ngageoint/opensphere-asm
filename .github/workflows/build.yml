name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    container: emscripten/emsdk:latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        persist-credentials: false

    #
    # Chrome dependency list:
    # https://github.com/puppeteer/puppeteer/blob/main/docs/troubleshooting.md#chrome-headless-doesnt-launch-on-unix
    #
    - name: Install Chrome Deps
      run: |
        sudo apt-get update
        sudo apt-get install -y ca-certificates fonts-liberation libappindicator3-1 libasound2 libatk-bridge2.0-0 \
          libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgbm1 libgcc1 libglib2.0-0 \
          libgtk-3-0 libnspr4 libnss3 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 \
          libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 \
          lsb-release wget xdg-utils

    - name: Install Chrome
      uses: browser-actions/setup-chrome@latest

    - name: Set CHROME_BIN environment variable
      run: |
        echo "CHROME_BIN=$(which chrome)" >> $GITHUB_ENV
        echo "CHROME_BIN = $CHROME_BIN"

    - name: Install Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 14.x

    - name: Install Yarn
      run: npm install -g yarn

    - name: Get Yarn Cache Directory
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - name: Cache Yarn Cache Directory
      uses: actions/cache@v2
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Install Dependencies
      run: yarn --frozen-lockfile --prefer-offline

    - name: Download GeographicLib
      run: ./ci-install.sh

    - name: Build
      run: ./build.sh

    - name: Unit Tests
      run: yarn test
      env:
        CHROME_BIN: $(which chrome)

    - name: Release
      if: github.ref == 'refs/heads/master'
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      run: yarn semantic-release
